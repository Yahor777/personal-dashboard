// üñ•Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PC –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏

export interface CPUSpecs {
  id: string;
  name: string;
  brand: 'Intel' | 'AMD';
  socket: string;
  tdp: number; // Watts
  generation: string;
  cores: number;
  threads: number;
  price: number; // z≈Ç
  performance: number; // Relative score
}

export interface MotherboardSpecs {
  id: string;
  name: string;
  socket: string;
  chipset: string;
  ramType: 'DDR4' | 'DDR5';
  ramSlots: number;
  maxRam: number; // GB
  pcie: string; // PCIe version
  formFactor: 'ATX' | 'Micro-ATX' | 'Mini-ITX';
  price: number;
}

export interface RAMSpecs {
  id: string;
  name: string;
  type: 'DDR4' | 'DDR5';
  speed: number; // MHz
  capacity: number; // GB
  sticks: number; // Number of sticks in kit
  price: number;
}

export interface GPUSpecs {
  id: string;
  name: string;
  brand: 'Nvidia' | 'AMD' | 'Intel';
  vram: number; // GB
  tdp: number; // Watts
  length: number; // mm
  performance: number; // Relative score
  price: number;
}

export interface PSUSpecs {
  id: string;
  name: string;
  wattage: number;
  efficiency: '80+ Bronze' | '80+ Silver' | '80+ Gold' | '80+ Platinum' | '80+ Titanium';
  modular: 'Fully Modular' | 'Semi-Modular' | 'Non-Modular';
  price: number;
}

export interface CaseSpecs {
  id: string;
  name: string;
  formFactor: ('ATX' | 'Micro-ATX' | 'Mini-ITX')[];
  maxGPULength: number; // mm
  maxCPUCoolerHeight: number; // mm
  price: number;
}

export interface StorageSpecs {
  id: string;
  name: string;
  type: 'NVMe SSD' | 'SATA SSD' | 'HDD';
  capacity: number; // GB
  price: number;
}

// üéÆ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ CPU –Ω–∞ —Ä—ã–Ω–∫–µ –ü–æ–ª—å—à–∏ (2025)
export const POPULAR_CPUS: CPUSpecs[] = [
  // AMD Ryzen
  {
    id: 'ryzen-5-5600',
    name: 'AMD Ryzen 5 5600',
    brand: 'AMD',
    socket: 'AM4',
    tdp: 65,
    generation: 'Zen 3',
    cores: 6,
    threads: 12,
    price: 400,
    performance: 85,
  },
  {
    id: 'ryzen-5-7600',
    name: 'AMD Ryzen 5 7600',
    brand: 'AMD',
    socket: 'AM5',
    tdp: 65,
    generation: 'Zen 4',
    cores: 6,
    threads: 12,
    price: 850,
    performance: 95,
  },
  {
    id: 'ryzen-7-5700x',
    name: 'AMD Ryzen 7 5700X',
    brand: 'AMD',
    socket: 'AM4',
    tdp: 65,
    generation: 'Zen 3',
    cores: 8,
    threads: 16,
    price: 600,
    performance: 90,
  },
  {
    id: 'ryzen-7-7700',
    name: 'AMD Ryzen 7 7700',
    brand: 'AMD',
    socket: 'AM5',
    tdp: 65,
    generation: 'Zen 4',
    cores: 8,
    threads: 16,
    price: 1200,
    performance: 100,
  },
  // Intel
  {
    id: 'intel-i5-12400f',
    name: 'Intel Core i5-12400F',
    brand: 'Intel',
    socket: 'LGA1700',
    tdp: 65,
    generation: '12th Gen',
    cores: 6,
    threads: 12,
    price: 500,
    performance: 87,
  },
  {
    id: 'intel-i5-13400f',
    name: 'Intel Core i5-13400F',
    brand: 'Intel',
    socket: 'LGA1700',
    tdp: 65,
    generation: '13th Gen',
    cores: 10,
    threads: 16,
    price: 750,
    performance: 93,
  },
  {
    id: 'intel-i5-14400f',
    name: 'Intel Core i5-14400F',
    brand: 'Intel',
    socket: 'LGA1700',
    tdp: 65,
    generation: '14th Gen',
    cores: 10,
    threads: 16,
    price: 850,
    performance: 95,
  },
];

// üîå –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–Ω—Å–∫–∏–µ –ø–ª–∞—Ç—ã
export const POPULAR_MOTHERBOARDS: MotherboardSpecs[] = [
  // AM4
  {
    id: 'b450-tomahawk',
    name: 'MSI B450 Tomahawk Max',
    socket: 'AM4',
    chipset: 'B450',
    ramType: 'DDR4',
    ramSlots: 4,
    maxRam: 128,
    pcie: 'PCIe 3.0',
    formFactor: 'ATX',
    price: 300,
  },
  {
    id: 'b550-aorus',
    name: 'Gigabyte B550 AORUS Elite',
    socket: 'AM4',
    chipset: 'B550',
    ramType: 'DDR4',
    ramSlots: 4,
    maxRam: 128,
    pcie: 'PCIe 4.0',
    formFactor: 'ATX',
    price: 450,
  },
  // AM5
  {
    id: 'b650-pro',
    name: 'ASUS B650 TUF Gaming Pro',
    socket: 'AM5',
    chipset: 'B650',
    ramType: 'DDR5',
    ramSlots: 4,
    maxRam: 128,
    pcie: 'PCIe 5.0',
    formFactor: 'ATX',
    price: 700,
  },
  // LGA1700
  {
    id: 'b660-pro',
    name: 'MSI B660M PRO',
    socket: 'LGA1700',
    chipset: 'B660',
    ramType: 'DDR4',
    ramSlots: 4,
    maxRam: 128,
    pcie: 'PCIe 4.0',
    formFactor: 'Micro-ATX',
    price: 400,
  },
  {
    id: 'b760-ds3h',
    name: 'Gigabyte B760 DS3H',
    socket: 'LGA1700',
    chipset: 'B760',
    ramType: 'DDR4',
    ramSlots: 4,
    maxRam: 128,
    pcie: 'PCIe 4.0',
    formFactor: 'ATX',
    price: 500,
  },
];

// üíæ –ü–æ–ø—É–ª—è—Ä–Ω–∞—è –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å
export const POPULAR_RAM: RAMSpecs[] = [
  // DDR4
  {
    id: 'ddr4-3200-16gb',
    name: 'G.Skill Ripjaws V 16GB (2x8GB) DDR4-3200',
    type: 'DDR4',
    speed: 3200,
    capacity: 16,
    sticks: 2,
    price: 200,
  },
  {
    id: 'ddr4-3600-32gb',
    name: 'Corsair Vengeance LPX 32GB (2x16GB) DDR4-3600',
    type: 'DDR4',
    speed: 3600,
    capacity: 32,
    sticks: 2,
    price: 350,
  },
  // DDR5
  {
    id: 'ddr5-5600-16gb',
    name: 'Kingston FURY Beast 16GB (2x8GB) DDR5-5600',
    type: 'DDR5',
    speed: 5600,
    capacity: 16,
    sticks: 2,
    price: 300,
  },
  {
    id: 'ddr5-6000-32gb',
    name: 'G.Skill Trident Z5 32GB (2x16GB) DDR5-6000',
    type: 'DDR5',
    speed: 6000,
    capacity: 32,
    sticks: 2,
    price: 550,
  },
];

// üéÆ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—ã
export const POPULAR_GPUS: GPUSpecs[] = [
  // Nvidia
  {
    id: 'rtx-3060',
    name: 'Nvidia RTX 3060 12GB',
    brand: 'Nvidia',
    vram: 12,
    tdp: 170,
    length: 240,
    performance: 75,
    price: 1200,
  },
  {
    id: 'rtx-4060',
    name: 'Nvidia RTX 4060 8GB',
    brand: 'Nvidia',
    vram: 8,
    tdp: 115,
    length: 240,
    performance: 80,
    price: 1400,
  },
  {
    id: 'rtx-4060-ti',
    name: 'Nvidia RTX 4060 Ti 8GB',
    brand: 'Nvidia',
    vram: 8,
    tdp: 160,
    length: 267,
    performance: 88,
    price: 1800,
  },
  // AMD
  {
    id: 'rx-6600',
    name: 'AMD RX 6600 8GB',
    brand: 'AMD',
    vram: 8,
    tdp: 132,
    length: 240,
    performance: 72,
    price: 900,
  },
  {
    id: 'rx-6650-xt',
    name: 'AMD RX 6650 XT 8GB',
    brand: 'AMD',
    vram: 8,
    tdp: 180,
    length: 267,
    performance: 78,
    price: 1100,
  },
  {
    id: 'rx-7600',
    name: 'AMD RX 7600 8GB',
    brand: 'AMD',
    vram: 8,
    tdp: 165,
    length: 240,
    performance: 82,
    price: 1300,
  },
];

// üîã –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –±–ª–æ–∫–∏ –ø–∏—Ç–∞–Ω–∏—è
export const POPULAR_PSUS: PSUSpecs[] = [
  {
    id: 'be-quiet-500w',
    name: 'be quiet! System Power 10 500W',
    wattage: 500,
    efficiency: '80+ Bronze',
    modular: 'Non-Modular',
    price: 200,
  },
  {
    id: 'corsair-650w',
    name: 'Corsair CV650 650W',
    wattage: 650,
    efficiency: '80+ Bronze',
    modular: 'Non-Modular',
    price: 250,
  },
  {
    id: 'seasonic-750w',
    name: 'Seasonic Focus GX-750 750W',
    wattage: 750,
    efficiency: '80+ Gold',
    modular: 'Fully Modular',
    price: 400,
  },
];

// üì¶ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–æ—Ä–ø—É—Å–∞
export const POPULAR_CASES: CaseSpecs[] = [
  {
    id: 'nzxt-h510',
    name: 'NZXT H510',
    formFactor: ['ATX', 'Micro-ATX', 'Mini-ITX'],
    maxGPULength: 381,
    maxCPUCoolerHeight: 165,
    price: 300,
  },
  {
    id: 'corsair-4000d',
    name: 'Corsair 4000D Airflow',
    formFactor: ['ATX', 'Micro-ATX', 'Mini-ITX'],
    maxGPULength: 360,
    maxCPUCoolerHeight: 170,
    price: 350,
  },
];

// üíø –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª–∏
export const POPULAR_STORAGE: StorageSpecs[] = [
  {
    id: 'samsung-980-500gb',
    name: 'Samsung 980 500GB NVMe',
    type: 'NVMe SSD',
    capacity: 500,
    price: 200,
  },
  {
    id: 'crucial-p3-1tb',
    name: 'Crucial P3 1TB NVMe',
    type: 'NVMe SSD',
    capacity: 1000,
    price: 300,
  },
  {
    id: 'wd-blue-1tb',
    name: 'WD Blue 1TB HDD',
    type: 'HDD',
    capacity: 1000,
    price: 150,
  },
];

// üéØ –ì–æ—Ç–æ–≤—ã–µ —Å–±–æ—Ä–∫–∏
export interface PCBuild {
  id: string;
  name: string;
  description: string;
  budget: number;
  purpose: string;
  cpu: string;
  motherboard: string;
  ram: string;
  gpu: string;
  psu: string;
  case: string;
  storage: string[];
  totalPrice: number;
  performance: {
    gaming: number;
    productivity: number;
    value: number;
  };
}

export const TEMPLATE_BUILDS: PCBuild[] = [
  {
    id: 'budget-cs2',
    name: '–ë—é–¥–∂–µ—Ç–Ω—ã–π Gaming (CS2)',
    description: '–û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –¥–ª—è CS2 —Å 200+ FPS',
    budget: 2500,
    purpose: 'Gaming - CS2, Valorant, League of Legends',
    cpu: 'ryzen-5-5600',
    motherboard: 'b450-tomahawk',
    ram: 'ddr4-3200-16gb',
    gpu: 'rx-6600',
    psu: 'corsair-650w',
    case: 'nzxt-h510',
    storage: ['crucial-p3-1tb'],
    totalPrice: 2400,
    performance: {
      gaming: 85,
      productivity: 70,
      value: 95,
    },
  },
  {
    id: 'optimal-allround',
    name: '–û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞',
    description: '–ë–∞–ª–∞–Ω—Å —Ü–µ–Ω—ã –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –∏–≥—Ä –∏ Python',
    budget: 3500,
    purpose: 'Gaming + Programming + Streaming',
    cpu: 'intel-i5-13400f',
    motherboard: 'b760-ds3h',
    ram: 'ddr4-3600-32gb',
    gpu: 'rtx-4060',
    psu: 'seasonic-750w',
    case: 'corsair-4000d',
    storage: ['crucial-p3-1tb'],
    totalPrice: 3450,
    performance: {
      gaming: 90,
      productivity: 88,
      value: 92,
    },
  },
  {
    id: 'ultra-budget',
    name: 'üí∞ –£–ª—å—Ç—Ä–∞–±—é–¥–∂–µ—Ç 1000z≈Ç',
    description: '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –¥–ª—è —É—á—ë–±—ã –∏ –ª—ë–≥–∫–∏—Ö –∏–≥—Ä',
    budget: 1000,
    purpose: '–£—á—ë–±–∞, –±—Ä–∞—É–∑–µ—Ä, –ª—ë–≥–∫–∏–µ –∏–≥—Ä—ã (Minecraft, League of Legends)',
    cpu: 'ryzen-5-5600',
    motherboard: 'b450-tomahawk',
    ram: 'ddr4-3200-16gb',
    gpu: 'rx-6600',
    psu: 'corsair-650w',
    case: 'nzxt-h510',
    storage: ['crucial-p3-500gb'],
    totalPrice: 1050,
    performance: {
      gaming: 60,
      productivity: 65,
      value: 100,
    },
  },
  {
    id: 'python-ml',
    name: 'üêç Python + Machine Learning',
    description: '–ú–æ—â–Ω–∞—è —Å–±–æ—Ä–∫–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è ML –∏ Data Science',
    budget: 4500,
    purpose: 'Python, TensorFlow, PyTorch, Jupyter Notebooks',
    cpu: 'ryzen-7-5700x',
    motherboard: 'b550-aorus',
    ram: 'ddr4-3600-32gb',
    gpu: 'rtx-4060-ti',
    psu: 'seasonic-750w',
    case: 'corsair-4000d',
    storage: ['samsung-970-1tb', 'crucial-p3-1tb'],
    totalPrice: 4380,
    performance: {
      gaming: 88,
      productivity: 95,
      value: 85,
    },
  },
  {
    id: 'cs2-esports',
    name: 'üéÆ CS2 E-Sports Pro',
    description: '300+ FPS –≤ CS2, –Ω–∏–∑–∫–∏–π input lag, 1% lows —Å—Ç–∞–±–∏–ª—å–Ω—ã',
    budget: 3200,
    purpose: 'CS2 –Ω–∞ –º–∞–∫—Å–∏–º—É–º FPS, Faceit Level 10',
    cpu: 'intel-i5-14400f',
    motherboard: 'b760-ds3h',
    ram: 'ddr4-3600-32gb',
    gpu: 'rx-6650-xt',
    psu: 'seasonic-750w',
    case: 'nzxt-h510',
    storage: ['samsung-970-1tb'],
    totalPrice: 3100,
    performance: {
      gaming: 95,
      productivity: 75,
      value: 88,
    },
  },
  {
    id: 'content-creator',
    name: 'üé• YouTube –ö–æ–Ω—Ç–µ–Ω—Ç-–º–µ–π–∫–µ—Ä',
    description: '–ú–æ–Ω—Ç–∞–∂ 4K –≤–∏–¥–µ–æ, —Å—Ç—Ä–∏–º–∏–Ω–≥, —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥',
    budget: 5500,
    purpose: 'Premiere Pro, After Effects, OBS Studio',
    cpu: 'ryzen-7-7700',
    motherboard: 'b650-gaming',
    ram: 'ddr5-6000-32gb',
    gpu: 'rtx-4060-ti',
    psu: 'seasonic-750w',
    case: 'corsair-4000d',
    storage: ['samsung-980-2tb', 'crucial-p3-1tb'],
    totalPrice: 5450,
    performance: {
      gaming: 85,
      productivity: 98,
      value: 80,
    },
  },
  {
    id: 'student-budget',
    name: 'üìö –î–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞ 1500z≈Ç',
    description: '–£—á—ë–±–∞, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, –ª—ë–≥–∫–∏–π –≥–µ–π–º–∏–Ω–≥',
    budget: 1500,
    purpose: 'VS Code, PyCharm, Google Docs, CS2 –Ω–∞ —Å—Ä–µ–¥–Ω–∏—Ö',
    cpu: 'ryzen-5-5600',
    motherboard: 'b450-tomahawk',
    ram: 'ddr4-3200-16gb',
    gpu: 'rx-6600',
    psu: 'corsair-650w',
    case: 'nzxt-h510',
    storage: ['crucial-p3-500gb'],
    totalPrice: 1520,
    performance: {
      gaming: 70,
      productivity: 75,
      value: 95,
    },
  },
  {
    id: 'aaa-gaming',
    name: 'üî• AAA Gaming 1440p',
    description: 'Cyberpunk, RDR2, GTA VI –Ω–∞ —É–ª—å—Ç—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö',
    budget: 6000,
    purpose: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ AAA –∏–≥—Ä—ã 1440p 120+ FPS',
    cpu: 'intel-i5-14400f',
    motherboard: 'b760-ds3h',
    ram: 'ddr5-6000-32gb',
    gpu: 'rtx-4060-ti',
    psu: 'seasonic-750w',
    case: 'corsair-4000d',
    storage: ['samsung-980-2tb'],
    totalPrice: 5850,
    performance: {
      gaming: 98,
      productivity: 85,
      value: 75,
    },
  },
  {
    id: 'workstation',
    name: 'üíº –†–∞–±–æ—á–∞—è —Å—Ç–∞–Ω—Ü–∏—è',
    description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞: CAD, 3D, –≤–∏–¥–µ–æ–º–æ–Ω—Ç–∞–∂',
    budget: 7000,
    purpose: 'AutoCAD, Blender, Premiere Pro, Photoshop',
    cpu: 'ryzen-7-7700',
    motherboard: 'b650-gaming',
    ram: 'ddr5-6000-32gb',
    gpu: 'rtx-4060-ti',
    psu: 'seasonic-750w',
    case: 'corsair-4000d',
    storage: ['samsung-980-2tb', 'samsung-970-1tb'],
    totalPrice: 6950,
    performance: {
      gaming: 90,
      productivity: 99,
      value: 70,
    },
  },
  {
    id: 'balanced-2024',
    name: '‚öñÔ∏è –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è 2024',
    description: '–ó–æ–ª–æ—Ç–∞—è —Å–µ—Ä–µ–¥–∏–Ω–∞: –∏–≥—Ä—ã, —Ä–∞–±–æ—Ç–∞, —É—á—ë–±–∞ - –≤—Å—ë –Ω–∞ –≤—ã—Å–æ—Ç–µ',
    budget: 4000,
    purpose: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –Ω–∞ 5+ –ª–µ—Ç',
    cpu: 'ryzen-5-7600',
    motherboard: 'b650-gaming',
    ram: 'ddr5-5600-32gb',
    gpu: 'rtx-4060',
    psu: 'seasonic-750w',
    case: 'corsair-4000d',
    storage: ['samsung-970-1tb'],
    totalPrice: 3980,
    performance: {
      gaming: 92,
      productivity: 90,
      value: 90,
    },
  },
];

// üîß –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
export interface CompatibilityCheck {
  compatible: boolean;
  warnings: string[];
  errors: string[];
  suggestions: string[];
}

export function checkCPUMotherboardCompatibility(
  cpu: CPUSpecs,
  motherboard: MotherboardSpecs
): CompatibilityCheck {
  const result: CompatibilityCheck = {
    compatible: true,
    warnings: [],
    errors: [],
    suggestions: [],
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ socket
  if (cpu.socket !== motherboard.socket) {
    result.compatible = false;
    result.errors.push(
      `‚ùå –ù–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ —Å–æ–∫–µ—Ç—ã: CPU –∏—Å–ø–æ–ª—å–∑—É–µ—Ç ${cpu.socket}, –∞ –º–∞—Ç–µ—Ä–∏–Ω—Å–∫–∞—è –ø–ª–∞—Ç–∞ ${motherboard.socket}`
    );
  }

  return result;
}

export function checkRAMCompatibility(
  ram: RAMSpecs,
  motherboard: MotherboardSpecs
): CompatibilityCheck {
  const result: CompatibilityCheck = {
    compatible: true,
    warnings: [],
    errors: [],
    suggestions: [],
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ –ø–∞–º—è—Ç–∏
  if (ram.type !== motherboard.ramType) {
    result.compatible = false;
    result.errors.push(
      `‚ùå –ù–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π —Ç–∏–ø –ø–∞–º—è—Ç–∏: RAM ${ram.type}, –º–∞—Ç–µ—Ä–∏–Ω—Å–∫–∞—è –ø–ª–∞—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç ${motherboard.ramType}`
    );
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ—Ç–æ–≤
  if (ram.sticks > motherboard.ramSlots) {
    result.compatible = false;
    result.errors.push(
      `‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–ª–æ—Ç–æ–≤: RAM —Ç—Ä–µ–±—É–µ—Ç ${ram.sticks} —Å–ª–æ—Ç–∞(–æ–≤), –¥–æ—Å—Ç—É–ø–Ω–æ ${motherboard.ramSlots}`
    );
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –æ–±—ä—ë–º–∞
  if (ram.capacity > motherboard.maxRam) {
    result.warnings.push(
      `‚ö†Ô∏è –û–±—ä—ë–º –ø–∞–º—è—Ç–∏ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π: ${ram.capacity}GB > ${motherboard.maxRam}GB`
    );
  }

  return result;
}

export function calculatePSURequirement(
  cpu: CPUSpecs,
  gpu: GPUSpecs,
  additionalWattage: number = 100
): number {
  // –§–æ—Ä–º—É–ª–∞: CPU TDP + GPU TDP + 100W (–¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤) + 20% –∑–∞–ø–∞—Å
  const totalWattage = cpu.tdp + gpu.tdp + additionalWattage;
  const recommendedWattage = Math.ceil(totalWattage * 1.2 / 50) * 50; // –û–∫—Ä—É–≥–ª–µ–Ω–∏–µ –¥–æ –±–ª–∏–∂–∞–π—à–∏—Ö 50W
  return recommendedWattage;
}

export function checkGPUCaseCompatibility(
  gpu: GPUSpecs,
  caseSpecs: CaseSpecs
): CompatibilityCheck {
  const result: CompatibilityCheck = {
    compatible: true,
    warnings: [],
    errors: [],
    suggestions: [],
  };

  if (gpu.length > caseSpecs.maxGPULength) {
    result.compatible = false;
    result.errors.push(
      `‚ùå –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ –Ω–µ –≤–ª–µ–∑–µ—Ç –≤ –∫–æ—Ä–ø—É—Å: ${gpu.length}mm > ${caseSpecs.maxGPULength}mm`
    );
  } else if (gpu.length > caseSpecs.maxGPULength * 0.9) {
    result.warnings.push(
      `‚ö†Ô∏è –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ –ø–æ—á—Ç–∏ –≤–ø—Ä–∏—Ç—ã–∫: ${gpu.length}mm / ${caseSpecs.maxGPULength}mm`
    );
  }

  return result;
}

export function calculateTotalBuildPrice(build: Partial<PCBuild>): number {
  let total = 0;
  
  if (build.cpu) {
    const cpu = POPULAR_CPUS.find(c => c.id === build.cpu);
    if (cpu) total += cpu.price;
  }
  
  if (build.motherboard) {
    const mb = POPULAR_MOTHERBOARDS.find(m => m.id === build.motherboard);
    if (mb) total += mb.price;
  }
  
  if (build.ram) {
    const ram = POPULAR_RAM.find(r => r.id === build.ram);
    if (ram) total += ram.price;
  }
  
  if (build.gpu) {
    const gpu = POPULAR_GPUS.find(g => g.id === build.gpu);
    if (gpu) total += gpu.price;
  }
  
  if (build.psu) {
    const psu = POPULAR_PSUS.find(p => p.id === build.psu);
    if (psu) total += psu.price;
  }
  
  if (build.case) {
    const caseItem = POPULAR_CASES.find(c => c.id === build.case);
    if (caseItem) total += caseItem.price;
  }
  
  if (build.storage) {
    build.storage.forEach(storageId => {
      const storage = POPULAR_STORAGE.find(s => s.id === storageId);
      if (storage) total += storage.price;
    });
  }
  
  return total;
}
