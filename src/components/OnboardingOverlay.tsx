import { useState } from 'react';
import { ArrowRight, Check } from 'lucide-react';
import { useStore } from '../store/useStore';
import { Button } from './ui/button';
import { motion, AnimatePresence } from 'motion/react';

export function OnboardingOverlay() {
  const { workspace, updateSettings } = useStore();
  const [step, setStep] = useState(0);

  if (workspace.settings.onboardingCompleted) return null;

  const steps = [
    {
      title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–æ—é –ü–∞–Ω–µ–ª—å! üëã',
      description: '–û—Ä–≥–∞–Ω–∏–∑—É–π—Ç–µ —É—á—ë–±—É, —Ä–µ—Ü–µ–ø—Ç—ã –∏ –ª–∏—á–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ —Å –ø–æ–º–æ—â—å—é —É–¥–æ–±–Ω—ã—Ö –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–æ–∫.',
      emoji: 'üéØ',
    },
    {
      title: '–°–æ–∑–¥–∞–π—Ç–µ –≤–∫–ª–∞–¥–∫—É',
      description: '–í–∫–ª–∞–¥–∫–∏ –ø–æ–º–æ–≥–∞—é—Ç —Ä–∞–∑–¥–µ–ª–∏—Ç—å —Ä–∞–∑–Ω—ã–µ —Å—Ñ–µ—Ä—ã –∂–∏–∑–Ω–∏. –ù–∞–ø—Ä–∏–º–µ—Ä: –£—á—ë–±–∞, –†–µ—Ü–µ–ø—Ç—ã, –õ–∏—á–Ω–æ–µ.',
      emoji: 'üìÇ',
    },
    {
      title: '–î–æ–±–∞–≤—å—Ç–µ –∫–∞—Ä—Ç–æ—á–∫–∏',
      description: '–ö–∞—Ä—Ç–æ—á–∫–∏ ‚Äî —ç—Ç–æ –≤–∞—à–∏ –∑–∞–¥–∞—á–∏, –∑–∞–º–µ—Ç–∫–∏, —Ä–µ—Ü–µ–ø—Ç—ã –∏–ª–∏ flashcards. –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–π—Ç–µ –∏—Ö –º–µ–∂–¥—É –∫–æ–ª–æ–Ω–∫–∞–º–∏!',
      emoji: 'üìù',
    },
    {
      title: '–ì–æ—Ç–æ–≤–æ! üéâ',
      description: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–∏—Å–∫, —Ñ–∏–ª—å—Ç—Ä—ã, —Ç–µ–≥–∏ –∏ —É–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.',
      emoji: '‚ú®',
    },
  ];

  const currentStep = steps[step];

  const handleNext = () => {
    if (step < steps.length - 1) {
      setStep(step + 1);
    } else {
      updateSettings({ onboardingCompleted: true });
    }
  };

  const handleSkip = () => {
    updateSettings({ onboardingCompleted: true });
  };

  return (
    <div className="fixed inset-0 z-[100] flex items-center justify-center bg-background/80 backdrop-blur-sm">
      <AnimatePresence mode="wait">
        <motion.div
          key={step}
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          exit={{ opacity: 0, y: -20 }}
          className="w-full max-w-lg rounded-xl border border-border bg-card p-8 shadow-2xl"
        >
          {/* Progress */}
          <div className="mb-6 flex gap-2">
            {steps.map((_, index) => (
              <div
                key={index}
                className={`h-1 flex-1 rounded-full ${
                  index <= step ? 'bg-primary' : 'bg-muted'
                }`}
              />
            ))}
          </div>

          {/* Content */}
          <div className="mb-8 text-center">
            <div className="mb-4 text-6xl">{currentStep.emoji}</div>
            <h2 className="mb-4">{currentStep.title}</h2>
            <p className="text-muted-foreground">
              {currentStep.description}
            </p>
          </div>

          {/* Actions */}
          <div className="flex gap-4">
            {step < steps.length - 1 ? (
              <>
                <Button variant="outline" onClick={handleSkip} className="flex-1">
                  –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
                </Button>
                <Button onClick={handleNext} className="flex-1">
                  –î–∞–ª–µ–µ
                  <ArrowRight className="ml-2 size-4" />
                </Button>
              </>
            ) : (
              <Button onClick={handleNext} className="w-full">
                <Check className="mr-2 size-4" />
                –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
              </Button>
            )}
          </div>
        </motion.div>
      </AnimatePresence>
    </div>
  );
}
